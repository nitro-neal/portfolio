{"version":3,"sources":["webpack:///./src/pages/contact.jsx","webpack:///./src/components/Layout/SEO.jsx","webpack:///./src/components/Common/Container.jsx","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/Contact/ContactForm.jsx","webpack:///./src/components/Contact/ContactCard.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout_SEO__WEBPACK_IMPORTED_MODULE_1__","_components_Common_Container__WEBPACK_IMPORTED_MODULE_2__","_components_Contact_ContactForm__WEBPACK_IMPORTED_MODULE_3__","_shared_transitions__WEBPACK_IMPORTED_MODULE_4__","_components_Contact_ContactCard__WEBPACK_IMPORTED_MODULE_5__","Contact","a","createElement","Fragment","title","style","animations","verticleSlide","copy","name","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","d","ContentContainer","ContactContainer","styled_components__WEBPACK_IMPORTED_MODULE_0__","_shared_breakpoints__WEBPACK_IMPORTED_MODULE_1__","react_spring__WEBPACK_IMPORTED_MODULE_2__","_shared_colors__WEBPACK_IMPORTED_MODULE_3__","Container","styled","animated","div","withConfig","displayName","componentId","breakpoints","tablet","desktop","color","_ref2","client","colors","white","_ref3","_ref4","_ref5","_ref6","_ref7","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","ContactForm","method","data-netlify","data-netlify-honeypot","action","type","Input","htmlFor","id","required","Button","ButtonSpan","black","button","blue","span","transitions","mediumSnap","Card","ContactCard","link","href","target","rel","react_icons_fa__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,KAmBeW,UAZC,WACd,OACEP,EAAAQ,EAAAC,cAAAT,EAAAQ,EAAAE,SAAA,KACEV,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAKS,MAAM,YACXX,EAAAQ,EAAAC,cAACN,EAAA,EAAD,CAAkBS,MAAOC,IAAWC,cAAX,QAAkC,IACzDd,EAAAQ,EAAAC,cAACH,EAAA,EAAD,CAAaK,MAAM,UAAUI,KAAK,mCAClCf,EAAAQ,EAAAC,cAACL,EAAA,EAAD,CAAaY,KAAK,qGCR1B,SAASC,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMV,EAASO,EAATP,MAC9BW,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAnB,EAAAC,cAAAkB,EAAAnB,EAAAE,SAAA,KACEiB,EAAAnB,EAAAC,cAACmB,EAAApB,EAAD,CACEqB,eAAgB,CACdT,QAEFT,MAAOA,EACPmB,cAAa,QAAUR,EAAKI,aAAaf,MACzCU,KAAM,CACJ,CACEL,KAAI,cACJe,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASpB,GAEX,CACEqB,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACEf,KAAI,eACJe,QAAO,WAET,CACEf,KAAI,kBACJe,QAAST,EAAKI,aAAaO,QAE7B,CACEjB,KAAI,gBACJe,QAASpB,GAEX,CACEK,KAAI,sBACJe,QAASN,IAEXS,OAAOb,MAMjBJ,EAAIkB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNF,YAAW,IAUEF,6KClFfrB,EAAAwC,EAAAtC,EAAA,sBAAAuC,IAAAzC,EAAAwC,EAAAtC,EAAA,sBAAAwC,IAAA,IAAAC,EAAA3C,EAAA,GAAA4C,EAAA5C,EAAA,IAAA6C,EAAA7C,EAAA,IAAA8C,EAAA9C,EAAA,GAKM+C,EAAYC,YAAOC,IAASC,KAAnBC,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAGL,CAAH,oHAOXM,IAAYC,QAKHd,EAAmBO,YAAOD,GAAVI,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGL,CAAH,kMAIzBM,IAAYE,SAqBHd,EAAmBM,IAAOE,IAAVC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGL,CAAH,ycAGP,SAAA1B,GAAA,OAAAA,EAAGmC,OACd,SAAAC,GAAA,MAA4B,YAA5BA,EAAGC,OAAc,UAAmCC,IAAOC,OAShEP,IAAYC,OAIZD,IAAYE,QAQZF,IAAYC,OAIZD,IAAYE,QAMF,SAAAM,GAAA,MACG,YADHA,EAAGH,OACX,uBAAgD,MAK3C,SAAAI,GAAA,MACI,YADJA,EAAGJ,OACV,UAAmCC,IAAOC,OAKtB,SAAAG,GAAA,OAAAA,EAAGP,OAKhB,SAAAQ,GAAA,OAAAA,EAAGR,OACQ,SAAAS,GAAA,MACP,YADOA,EAAGP,OACrB,UAAmCC,IAAOC,QAIjCd,2BCpGf,IAAAoB,EAAcnE,EAAQ,GACtBoE,EAAYpE,EAAQ,IACpBqE,EAAcrE,EAAQ,IACtBsE,EAAA,KAEAC,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAC,OAAAR,EAAAG,IACAM,EAAA,IAAAL,EAEA,MADA,KAAAC,IAAAI,GAAA,IAAAJ,EAAA,KAAAG,OAAAF,GAAAI,QAAAT,EAAA,UAA0F,KAC1FQ,EAAA,IAAAF,EAAA,KAAAH,EAAA,KAEAO,EAAAC,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAA,EAAAF,GAAAC,EAAAZ,GACAJ,IAAAkB,EAAAlB,EAAAmB,EAAAlB,EAAA,WACA,IAAAmB,EAAA,GAAAL,GAAA,KACA,OAAAK,MAAAC,eAAAD,EAAAE,MAAA,KAAAC,OAAA,IACG,SAAAN,qGCiCYO,IA1CK,SAAArE,GAAc,IAAXF,EAAWE,EAAXF,KACrB,OACEW,EAAAnB,EAAAC,cAAAkB,EAAAnB,EAAAE,SAAA,KACEiB,EAAAnB,EAAAC,cAAA,QACEO,KAAMA,EACNwE,OAAO,OACPC,eAAa,OACbC,wBAAsB,YACtBC,OAAO,kDAEPhE,EAAAnB,EAAAC,cAAA,SACEmF,KAAK,SACL5E,KAAK,QACLuD,MAAM,4CAER5C,EAAAnB,EAAAC,cAACoF,EAAD,KACElE,EAAAnB,EAAAC,cAAA,SAAOqF,QAAQ,QACbnE,EAAAnB,EAAAC,cAAA,uBAEFkB,EAAAnB,EAAAC,cAAA,SAAOmF,KAAK,OAAO5E,KAAK,OAAO+E,GAAG,OAAOC,UAAQ,KAEnDrE,EAAAnB,EAAAC,cAACoF,EAAD,KACElE,EAAAnB,EAAAC,cAAA,SAAOqF,QAAQ,SACbnE,EAAAnB,EAAAC,cAAA,wBAEFkB,EAAAnB,EAAAC,cAAA,SAAOmF,KAAK,QAAQ5E,KAAK,QAAQ+E,GAAG,QAAQC,UAAQ,KAEtDrE,EAAAnB,EAAAC,cAACoF,EAAD,KACElE,EAAAnB,EAAAC,cAAA,SAAOqF,QAAQ,WACbnE,EAAAnB,EAAAC,cAAA,qBAEFkB,EAAAnB,EAAAC,cAAA,YAAUO,KAAK,UAAU+E,GAAG,UAAUC,UAAQ,KAEhDrE,EAAAnB,EAAAC,cAACwF,EAAD,CAAQL,KAAK,UACXjE,EAAAnB,EAAAC,cAAA,iBACAkB,EAAAnB,EAAAC,cAACyF,EAAD,UASV,IAAML,EAAQjD,IAAOE,IAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGL,CAAH,kNAQaY,IAAO2C,MAMJ3C,IAAOC,MACrBD,IAAOC,OAKdwC,EAASrD,IAAOwD,OAAVrD,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGL,CAAH,0IAIUY,IAAO6C,KAClB7C,IAAOC,MAKdP,IAAYC,QAKV+C,EAAatD,IAAO0D,KAAVvD,WAAA,CAAAC,YAAA,0BAAAC,YAAA,YAAGL,CAAH,qMAOMY,IAAO2C,MAIzBI,IAAYC,WAEZP,sFCjFEQ,EAAO7D,IAAOE,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGL,CAAH,4HAWGY,IAAO6C,MAQLK,IAjCK,SAAAxF,GAA2B,IAAxBP,EAAwBO,EAAxBP,MAAOI,EAAiBG,EAAjBH,KAAM4F,EAAWzF,EAAXyF,KAClC,OACEhF,EAAAnB,EAAAC,cAACgG,EAAD,KACE9E,EAAAnB,EAAAC,cAAA,UAAKE,GACLgB,EAAAnB,EAAAC,cAAA,SAAIM,GACH4F,EACChF,EAAAnB,EAAAC,cAAA,KAAGmG,KAAMD,EAAME,OAAO,SAASC,IAAI,uBAAnC,oBACmBnF,EAAAnB,EAAAC,cAACsG,EAAA,EAAD,OAEjB","file":"component---src-pages-contact-jsx-56761c7ffe441559b0da.js","sourcesContent":["import React from \"react\";\r\nimport SEO from \"../components/Layout/SEO\";\r\nimport { ContentContainer } from \"../components/Common/Container\";\r\nimport ContactForm from \"../components/Contact/ContactForm\";\r\nimport { animations } from \"../shared/transitions\";\r\nimport ContactCard from \"../components/Contact/ContactCard\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <>\r\n      <SEO title=\"Contact\" />\r\n      <ContentContainer style={animations.verticleSlide(`15rem`, 0)}>\r\n        <ContactCard title=\"Contact\" copy=\"Leave a message and say hello!\" />\r\n        <ContactForm name=\"Contact Form\" />\r\n      </ContentContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <>\r\n      <Helmet\r\n        htmlAttributes={{\r\n          lang,\r\n        }}\r\n        title={title}\r\n        titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n        meta={[\r\n          {\r\n            name: `description`,\r\n            content: metaDescription,\r\n          },\r\n          {\r\n            property: `og:title`,\r\n            content: title,\r\n          },\r\n          {\r\n            property: `og:description`,\r\n            content: metaDescription,\r\n          },\r\n          {\r\n            property: `og:type`,\r\n            content: `website`,\r\n          },\r\n          {\r\n            name: `twitter:card`,\r\n            content: `summary`,\r\n          },\r\n          {\r\n            name: `twitter:creator`,\r\n            content: site.siteMetadata.author,\r\n          },\r\n          {\r\n            name: `twitter:title`,\r\n            content: title,\r\n          },\r\n          {\r\n            name: `twitter:description`,\r\n            content: metaDescription,\r\n          },\r\n        ].concat(meta)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n","import styled from \"styled-components\";\r\nimport breakpoints from \"../../shared/breakpoints\";\r\nimport { animated } from \"react-spring\";\r\nimport colors from \"../../shared/colors\";\r\n\r\nconst Container = styled(animated.div)`\r\n  position: relative;\r\n  grid-column: 2 / 12;\r\n  display: grid;\r\n  grid-row-gap: 8rem;\r\n  margin-bottom: 8rem;\r\n\r\n  ${breakpoints.tablet} {\r\n    grid-column: 3 / 11;\r\n  }\r\n`;\r\n\r\nexport const ContentContainer = styled(Container)`\r\n  grid-row-gap: 2rem;\r\n  margin-top: 30vh;\r\n\r\n  ${breakpoints.desktop} {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-auto-rows: min-content;\r\n\r\n    .full {\r\n      grid-column: span 2;\r\n    }\r\n\r\n    h1,\r\n    .left {\r\n      grid-column: span 1;\r\n    }\r\n\r\n    article,\r\n    p,\r\n    .right {\r\n      grid-column-start: 2;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ContactContainer = styled.div`\r\n  position: relative;\r\n  grid-column: 1 / -1;\r\n  background-color: ${({ color }) => color};\r\n  color: ${({ client }) => (client === \"Binance\" ? `#02394A` : colors.white)};\r\n  display: grid;\r\n  grid-template-columns: repeat(12, 1fr);\r\n  padding: calc(100vh / 6) 0;\r\n  box-shadow: inset 0 0 5rem rgba(0, 0, 0, 0.25);\r\n\r\n  div {\r\n    grid-column: 2 / 12;\r\n\r\n    ${breakpoints.tablet} {\r\n      grid-column: 3 / 11;\r\n    }\r\n\r\n    ${breakpoints.desktop} {\r\n      grid-column: 3 / 6;\r\n    }\r\n  }\r\n\r\n  form {\r\n    grid-column: 2 / 12;\r\n\r\n    ${breakpoints.tablet} {\r\n      grid-column: 3 / 11;\r\n    }\r\n\r\n    ${breakpoints.desktop} {\r\n      grid-column: 7 / 11;\r\n    }\r\n\r\n    input,\r\n    textarea {\r\n      border: ${({ client }) =>\r\n        client === \"Binance\" ? `0.1rem solid #02394A` : null};\r\n    }\r\n  }\r\n\r\n  a {\r\n    color: ${({ client }) =>\r\n      client === \"Binance\" ? `#02394A` : colors.white} !important;\r\n  }\r\n\r\n  label {\r\n    p {\r\n      background-color: ${({ color }) => color};\r\n    }\r\n  }\r\n\r\n  button {\r\n    color: ${({ color }) => color};\r\n    background-color: ${({ client }) =>\r\n      client === \"Binance\" ? `#02394A` : colors.white};\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport colors from \"../../shared/colors\";\r\nimport { transitions } from \"../../shared/transitions\";\r\nimport breakpoints from \"../../shared/breakpoints\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst ContactForm = ({ name }) => {\r\n  return (\r\n    <>\r\n      <form\r\n        name={name}\r\n        method=\"POST\"\r\n        data-netlify=\"true\"\r\n        data-netlify-honeypot=\"bot-field\"\r\n        action=\"http://formforwarder.xyz/groessler24@gmail.com\"\r\n      >\r\n        <input\r\n          type=\"hidden\"\r\n          name=\"_next\"\r\n          value=\"https://nitro-neal.github.io/portfolio/\"\r\n        />\r\n        <Input>\r\n          <label htmlFor=\"name\">\r\n            <p>Your name</p>\r\n          </label>\r\n          <input type=\"text\" name=\"name\" id=\"name\" required />\r\n        </Input>\r\n        <Input>\r\n          <label htmlFor=\"email\">\r\n            <p>Your email</p>\r\n          </label>\r\n          <input type=\"email\" name=\"email\" id=\"email\" required />\r\n        </Input>\r\n        <Input>\r\n          <label htmlFor=\"message\">\r\n            <p>Message</p>\r\n          </label>\r\n          <textarea name=\"message\" id=\"message\" required />\r\n        </Input>\r\n        <Button type=\"submit\">\r\n          <p>Send</p>\r\n          <ButtonSpan />\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 4rem;\r\n\r\n  p {\r\n    padding: 0 1rem;\r\n    width: fit-content;\r\n    background-color: ${colors.black};\r\n    transform: translate(1rem, 1rem);\r\n  }\r\n\r\n  input,\r\n  textarea {\r\n    border: 0.1rem solid ${colors.white};\r\n    color: ${colors.white};\r\n    padding: 2rem;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 0;\r\n  background-color: ${colors.blue};\r\n  color: ${colors.white};\r\n  padding: 1.5rem 8rem;\r\n  float: right;\r\n  width: 100%;\r\n\r\n  ${breakpoints.tablet} {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst ButtonSpan = styled.span`\r\n  position: absolute;\r\n  z-index: -1;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${colors.black};\r\n  opacity: 0.05;\r\n  transform: scale3d(1, 0, 1);\r\n  transform-origin: 50% 100%;\r\n  ${transitions.mediumSnap}\r\n\r\n  ${Button}:hover & {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport colors from \"../../shared/colors\";\r\nimport { FaLink } from \"react-icons/fa\";\r\n\r\nconst ContactCard = ({ title, copy, link }) => {\r\n  return (\r\n    <Card>\r\n      <h1>{title}</h1>\r\n      <p>{copy}</p>\r\n      {link ? (\r\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          View the project <FaLink />\r\n        </a>\r\n      ) : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Card = styled.div`\r\n  margin-bottom: 5rem;\r\n  h1 {\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  a {\r\n    color: ${colors.blue};\r\n\r\n    svg {\r\n      transform: translate(0.75rem, 0.25rem);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ContactCard;\r\n"],"sourceRoot":""}